services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: fullstack_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fullstack-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - fullstack-network

  backend:
    build: ./backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fullstack_db
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DJANGO_SETTINGS_MODULE=backend.settings_postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=fullstack_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - ./backend:/app
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fullstack-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  fullstack-network:
    driver: bridge
