# ========================================
# üèõÔ∏è GOVERNMENT FORMS MANAGEMENT SYSTEM
# Environment Configuration Template
# ========================================

# üóÑÔ∏è Database Configuration
POSTGRES_DB=government_forms_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change_this_in_production_2024
POSTGRES_HOST=db
POSTGRES_PORT=5432

# üêç Django Configuration
SECRET_KEY=change-this-super-secret-key-in-production-environment
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com

# üîê JWT Configuration  
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
ACCESS_TOKEN_LIFETIME=60
REFRESH_TOKEN_LIFETIME=1440

# üìß Email Configuration (Optional)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-google-app-password

# üåê Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_APP_NAME=Government Forms Management System

# üîß pgAdmin Configuration
PGADMIN_DEFAULT_EMAIL=admin@admin.com
PGADMIN_DEFAULT_PASSWORD=admin123
PGADMIN_CONFIG_SERVER_MODE=False

# üê≥ Docker Configuration
COMPOSE_PROJECT_NAME=government_forms_system
DOCKER_RESTART_POLICY=unless-stopped

# üõ°Ô∏è Security (Production only)
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False

# üìä Monitoring (Optional)
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0

# üåç Internationalization
LANGUAGE_CODE=ar
TIME_ZONE=Asia/Baghdad
USE_TZ=True

# üìÅ File Storage (Production)
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key  
# AWS_STORAGE_BUCKET_NAME=your_bucket_name
# AWS_S3_REGION_NAME=us-east-1

# üìù Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=/var/log/django/app.log

# ‚ö†Ô∏è  IMPORTANT SECURITY NOTES:
# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords for production
# 3. Generate new SECRET_KEY for each environment
# 4. Enable HTTPS in production (SECURE_SSL_REDIRECT=True)
# 5. Use environment-specific database credentials
# 6. Consider using Docker secrets for sensitive data
